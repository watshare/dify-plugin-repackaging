name: Offline Plugin Packaging

on:
  workflow_dispatch:
    inputs:
      source_type:
        description: 'Source type of the plugin (market, github, local)'
        required: true
        default: market
      plugin_author:
        description: 'Plugin author (only for "market" source type)'
        required: false
      plugin_name:
        description: 'Plugin name (only for "market" source type)'
        required: false
      plugin_version:
        description: 'Plugin version (only for "market" source type)'
        required: false
      github_repo:
        description: 'GitHub repository (e.g., "owner/repo", only for "github" source type)'
        required: false
      release_title:
        description: 'Release title (only for "github" source type)'
        required: false
      assets_name:
        description: 'Assets name (only for "github" source type)'
        required: false
      local_file_path:
        description: 'Path to the local file (only for "local" source type)'
        required: false

jobs:
  offline-packaging:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y curl jq unzip

      - name: Validate Inputs
        run: |
          if [ "${{ github.event.inputs.source_type }}" = "market" ]; then
            [ -z "${{ github.event.inputs.plugin_author }}" ] && echo "PLUGIN_AUTHOR is required for market source type" && exit 1
            [ -z "${{ github.event.inputs.plugin_name }}" ] && echo "PLUGIN_NAME is required for market source type" && exit 1
            [ -z "${{ github.event.inputs.plugin_version }}" ] && echo "PLUGIN_VERSION is required for market source type" && exit 1
          elif [ "${{ github.event.inputs.source_type }}" = "github" ]; then
            [ -z "${{ github.event.inputs.github_repo }}" ] && echo "GITHUB_REPO is required for github source type" && exit 1
            [ -z "${{ github.event.inputs.release_title }}" ] && echo "RELEASE_TITLE is required for github source type" && exit 1
            [ -z "${{ github.event.inputs.assets_name }}" ] && echo "ASSETS_NAME is required for github source type" && exit 1
          elif [ "${{ github.event.inputs.source_type }}" = "local" ]; then
            [ -z "${{ github.event.inputs.local_file_path }}" ] && echo "LOCAL_FILE_PATH is required for local source type" && exit 1
          else
            echo "Invalid source_type: ${{ github.event.inputs.source_type }}" && exit 1
          fi

      - name: Execute Offline Packaging
        run: |
          chmod +x ./plugin_repackaging.sh
          if [ "${{ github.event.inputs.source_type }}" = "market" ]; then
            ./plugin_repackaging.sh market "${{ github.event.inputs.plugin_author }}" "${{ github.event.inputs.plugin_name }}" "${{ github.event.inputs.plugin_version }}"
          elif [ "${{ github.event.inputs.source_type }}" = "github" ]; then
            ./plugin_repackaging.sh github "${{ github.event.inputs.github_repo }}" "${{ github.event.inputs.release_title }}" "${{ github.event.inputs.assets_name }}"
          elif [ "${{ github.event.inputs.source_type }}" = "local" ]; then
            ./plugin_repackaging.sh local "${{ github.event.inputs.local_file_path }}"
          fi

      - name: Archive Output
        run: |
          mkdir -p output
          mv *.difypkg ./output/
          echo "Packaging completed. Output files moved to ./output/"

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: offline-packages
          path: ./output/
